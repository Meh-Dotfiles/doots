#!/usr/bin/env bash
#
#    al-polybar-edit: An ArchLabs polybar config file editor
#    Copyright (C) 2017 Nathaniel    <natemaia10@gmail.com>
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
########################################################################
#
#   polybar files must be in $POLYBARPATH
#
#   Checkmarked polybars will be opened in the text editor
#   Multiple polybars can be chosen
#
########################################################################

POLYBARPATH="$HOME/.config/polybar"

HELP="    al-polybar-edit a script to edit selected polybar configs and scripts
Options:
    -h --help   show this message
No other options are supported.
Polybar files must be in $POLYBARPATH
Checkmarked configs and scripts will be opened in a text editor.
Multiple configs or scripts can be chosen.
"

### DIALOG VARIABLES
DLGDEC="zenity"
TITLE="ArchLabs Polybar Edit"
WINICON="--window-icon=/usr/share/icons/hicolor/256x256/apps/al-hello-logo.png"
OK="--ok-label=Ok"
CANCEL="--cancel-label=Cancel"

########## FUNCTIONS ###################################################

fillArrays(){
    num="$1"
    polybarsPath[$num]="$2"   # full filepath to polybar
    polybarsArr[$num]="$3"    # displayed name: "directory/polybar-config"
}

findConfigs(){
# search dirs for polybar config files
    num=0
    for x in $(find $POLYBARPATH -type f );do

        f=$(basename "$x")    # filename from filepath
        if [[ $f = *config ]] || [[ $f = *conf ]] || [[ $f = *.sh ]] || [[ -x $f ]]; then
            POLYBAR=$( echo $x | awk -F"/" '{print $NF}')
            fillArrays $num $x $POLYBAR
            num=$(($num+1))
        fi
    done
}
######## END FUNCTIONS #################################################

# look for a help option somewhere
for i in "$@"
do
    case "$i" in
    -h|--help)
        echo "$HELP"
        exit 0
        ;;
    esac
done

# get polybar directories, add to array
findConfigs

# loop through arrays, and build msg text for dialog
unset LISTBAR
for ((j=0; j<${#polybarsArr[*]}; j++));do
    LISTBAR="$LISTBAR FALSE ${polybarsArr[j]} "
done
## Populate dialog from array, get return value(s)
RET=$($DLGDEC $WINICON --list --title="$TITLE" \
    --text="<big>Select Polybar Configs or Scripts to edit</big>\n\n" \
    --checklist --width=450 --height=500 --multiple \
    --column="Select" --column="File Name" $LISTBAR --separator=":" \
    $OK $CANCEL \
    )

if (( $? == 1 )); then # cancel button pressed
    exit 0
else
    i=0
    OIFS=$IFS   # save Internal Field Separator
    IFS=":"     # separator is ":" in returned choices
    for name in $RET; do
        retBars[$i]="$name"
        i=$(($i+1))
    done
    IFS=$OIFS   # reset IFS back to default

    # Find the chosen polybars and edit them
    for name in ${retBars[*]};do       # loop through checkmarked polybar names
        for ((j=0; j<${#polybarsPath[*]}; j++));do  # traverse through elements
            for f in ${polybarsPath[j]};do    # compare with choice from dialog
                display=$( echo "$f" | awk -F"/" '{print $NF}')
                if [[ $display = $name ]];then
                    exo-open "$f"
                fi
            done
        done
    done
fi

exit 0
